buildscript {
	repositories {
		jcenter()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
	}
}

plugins {
	id "com.jfrog.bintray" version "1.4"
}

apply plugin: 'maven-publish'
apply plugin: 'net.minecraftforge.gradle.forge'

version = mc_version + "-" + cc_version + "-" + mod_version
group = "org.squiddev"
archivesBaseName = "unborked"

minecraft {
	version = "${project.mc_version}-${project.forge_version}"
	runDir = "run"
	mappings = "snapshot_20160518"

	replace '${mod_version}', project.mod_version
	replace '${mc_version}', project.mc_version
	replace '${cc_version}', project.cc_version
}

repositories {
	jcenter();
	ivy {
		artifactPattern "http://addons-origin.cursecdn.com/files/2311/39/[module][revision](.[ext])"
	}

	maven {
		name = "squiddev"
		url = "https://dl.bintray.com/squiddev/maven"
	}
}

configurations {
	shade
	compile.extendsFrom shade
}

dependencies {
	provided files("lib/ComputerCraft${project.cc_version}.jar")
	runtime "ComputerCraft:ComputerCraft:${project.cc_version}"

	shade('org.squiddev:Patcher:1.2.4') { exclude group: 'org.ow2.asm' }
}

jar {
	manifest {
		attributes(
			'FMLCorePlugin': 'org.squiddev.unborked.core.UnborkedPlugin',
			'FMLCorePluginContainsFMLMod': 'true',
		)
	}

	from(configurations.shade.collect { it.isDirectory() ? it : zipTree(it) })
}

processResources {
	// this will ensure that this task is redone when the versions change.
	inputs.property "mod_version", project.mod_version
	inputs.property "mc_version", project.mc_version
	inputs.property "cc_version", project.cc_version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'mod_version': mod_version, 'mc_version': mc_version, 'cc_version': cc_version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xlint"
	}
}

bintray {
	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
	publications = ['mavenJava']
	publish = true
	pkg {
		repo = 'maven'
		name = 'unborked'
		licenses = ['MIT']
		vcsUrl = 'https://github.com/SquidDev-CC/CCTweaks'
		publish = true

		version {
			name = project.version
			desc = "Makes ComputerCraft ${project.cc_version} less buggy for ${project.mc_version}"
			released = new Date()
			vcsTag = 'v' + project.version
		}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact jar
			artifact devJar
		}
	}
}

// Build a non-obfuscated jar
task devJar(type: Jar) {
	manifest {
		attributes(
			'FMLCorePlugin': 'org.squiddev.unborked.core.UnborkedPlugin',
			'FMLCorePluginContainsFMLMod': 'true',
		)
	}

	from sourceSets.main.output
	from(configurations.shade.collect { it.isDirectory() ? it : zipTree(it) })

	classifier = 'dev'
}
